service:
  name: ${self:custom.serviceName}-api
  publish: false

frameworkVersion: "=1.42.3"

# The `provider` block defines where your service will be deployed
provider:
  name: aws
  runtime: nodejs8.10
  stage: ${opt:stage, 'temp'}
  region: "${file(../serverless.yml):provider.region}"
  deploymentBucket:
    name: ${self:custom.serviceName}-${self:provider.stage}-deploys
    serverSideEncryption: AES256

resources: ${file(resources/resources.yml)}

plugins:
  - serverless-deployment-bucket
  - serverless-appsync-plugin

custom:
  env:
    appSyncLogLevel:
      dev: ERROR
      stage: ERROR
      prod: ERROR
      default: ALL
  name: "${self:service.name}-${self:provider.stage}"
  nameU: "${self:custom.serviceName}_api_${self:provider.stage}"
  datasourceServiceRoleName: "${self:custom.serviceName}-db-${self:provider.stage}-app-sync-service-role"
  datasourceLambdaName: "${file(../serverless.yml):service.name}-${self:provider.stage}"
  # for some reason pseudo-parameter #{AWS::AccountId} does not work ${file(../serverless.yml):custom.name}
  accountId: "${file(../serverless.yml):custom.env.accountId.${self:provider.stage}, file(../serverless.yml):custom.env.accountId.default}"
  serviceName: "${file(../serverless.yml):custom.serviceName}"
  appSync:
    name: "${self:custom.name}"
    authenticationType: AMAZON_COGNITO_USER_POOLS
    userPoolConfig:
      awsRegion: ${self:provider.region}
      defaultAction: ALLOW
      userPoolId:
        Fn::ImportValue: "UserPoolId-${file(../serverless.yml):service.name}-${self:provider.stage}"
    logConfig:
      loggingRoleArn: "arn:aws:iam::${self:custom.accountId}:role/${self:custom.name}-cloudwatch-logs-access-role"
      # Logging Level: NONE | ERROR | ALL
      level: ${self:custom.env.appSyncLogLevel.${self:provider.stage}, self:custom.env.appSyncLogLevel.default}
    mappingTemplates: ${file(./appsync/mappings.yml)}
    mappingTemplatesLocation: "appsync/mapping-templates"
    schema: "schema.graphql"
    serviceRole: "app-sync-service-role"
    dataSources: ${file(./appsync/datasources.yml)}
    substitutions:
      baseUrl:
        Fn::Join:
          - ""
          - - {
                "Fn::ImportValue": "ApiGatewayBaseUrl-${file(../serverless.yml):service.name}-${self:provider.stage}",
              }
            - "/images/"
